/* Variables (Custom Properties)
============================ */
:root {
  --primary--white: #F9F7FB;
  --primary--black: #0c2231;
  --secondary--black: #2a2a22;
  --tertiary--black: #444e56;
  --primary--purple: #0894BD;
  --placeholder-grey: #a4b0be;

  --required--grey: #E3E1E5;

  --font-stack-headings: 'Tinos', 'Times New Roman', Times, serif;
}

html{
  -webkit-box-sizing: border-box;
        box-sizing: border-box;
  font: 1em/1.5 'Josefin Slab', 'Times New Roman', Times, serif;
}

/* TESTING REM GLOBAL MARGIN, AND REMOVING ALL MARGIN TOPS */
h1,h2,h3,h4,h5,h6,hgroup,
ul,ol,dd,
p,figure,
pre,table,fieldset,hr,legend,
.form__field {
    margin-bottom:1.5rem;
}

/* Inherit 'box-sizing: border-box' from <html> selector,
  should be better than to use declare box-sizing with the universal
  * selector, because this method applies to pseudo elements
*/

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  background-color: var(--primary--white);
}

h1, h2, h3, h4, h5, h6, .header--info, legend {
  font-family: 'Tinos', 'Times New Roman', Times, serif;
}

/* p {
  margin: 0;
  padding: 0;
} */

button, input, select, textarea {
  font-size   : 100%;
  font-family : inherit;
}

/*
TODO: Read and remove
<textarea> elements default to being rendered as a block element. The two important things here are the resize and overflow properties. Because our design is a fixed-size design, we will use the resize property to prevent users from resizing our multi-line text field. The overflow property is used to make the field render more consistently across browsers. Some browsers default to the value auto, while some default to the value scroll. In our case, it's better to be sure every one will use auto: */
/*
TODO: Read and remove
The text fields require some common rules. Simply put, we remove their borders and backgrounds, and redefine their padding and margin:
*/
.container {
  padding: 0 1%;
  /* TODO: BEM, DRY? Combine max-width: 600 and auto margins? */
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

/* TODO: Look over these helper classes */
.center {
  margin-left: auto;
  margin-right: auto;
}

.text--center {
  text-align: center;
}

/* Header
============================ */

.header__intro {
  /* IE11 fallback */
  background-color: #0894BD;
  background-color: var(--primary--purple);
  /* margin-bottom: 1.2em; */
  /* I follow the CSS Wizards advice on declaring longhand for clarity and a better grip on the projects cascade.
  link to article: https://csswizardry.com/2016/12/css-shorthand-syntax-considered-an-anti-pattern/ */
  padding-top: .5em;
  padding-bottom: .8em;
}

.header__signup {
  padding: 0 1%;
  max-width: 600px;
}

.header__info {
  /* margin-top: 0.8em; */
  color: #444e56; /* IE11 fallback */
  color: var(--tertiary--black);
  font-weight: 400;
  font-size: 1.2em;
}

.header__divider {
  /* margin-top: 2em; */
  /* margin-bottom: 1em; */
  height: 2px;
  border-top-color: #444e56; /* IE11 fallback */
  border-top: 4px solid  var(--tertiary--black);
  border-right: none;
  border-bottom-color: #444e56; /* IE11 fallback */
  border-bottom: 2px solid  var(--tertiary--black);
  border-left: none;
}

/* Headings
============================ */

.heading {
  font-weight: 700;
  letter-spacing: 0.2px;
}

.heading--large  {
  color: var(--primary--white);
  text-transform: uppercase;
  font-size: 1.9em;
  /* padding-bottom: .5em; */
}

.heading--medium {
  color: var(--primary--black);
  font-size: 1.55em;
  text-transform: capitalize;
  line-height: 1.2;
}

.heading--small {
  font-size: 1.4em;
  color: var(--secondary--black);
  line-height: 1.3;
}

/* Sections
============================ */

.form {
  counter-reset: steps;
}

legend {
  counter-increment: steps;
}

legend::before {
  content: counter(steps) ". ";
  /* TODO: CHANGE COLOR */
  color: var(--primary--purple);
}

.form__section {
  padding: 0;
  border-width: 0;
}

.form__section:nth-of-type(1){
  /* TODO: Change color, do not use primary black, because it does not fit so good with the heading below */
  border-bottom: 2px solid var(--primary--black);
}

/* TODO: Use better names? */
.form__field {
  display: flex;
  flex-direction: column;
}

.form__field--newsletter {
  flex-direction: row;
  align-items: center;
}

.form__label {
  font-size: 1.2em;
  font-weight: 600;
  /* TODO: FIX VARIABLE FOR THIS COLOR */
  color: #444e56;
  color: var(--secondary--black);
}

/* TODO: Rename? Yes... */
input[type="text"],
input[type="email"],
input[type="tel"],
input[type="url"],
select,
textarea {
  background-color: #dfe4ea;
  opacity: .8;
  padding: .6em 3%;
  border: 2px solid var(--placeholder-grey);
  border-radius: .2em;
  font-size: 1.125em;
  transition: border-color .5s ease-out;
}

input[type="text"],
input[type="email"],
input[type="tel"],
input[type="url"],
select {
  min-height: 44px;
  border-left: 5px solid;
  border-left: 3px solid;
}

input[name="user_zip"] {
  width: 50%;
}

/* TODO: Check this code */
textarea {
  overflow: auto;
  padding : 10px;
  width   : 100%;
  height: 150px;
  resize  : none;
}

select {
  color: var(--placeholder-grey);
  background-color: red;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  /* background: url(http://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/br_down.png) no-repeat right #ddd; */
  background: url(../img/arrow_up_and_down.svg) no-repeat right/20px #eff0f1;
}

/*
TODO: Read and remove
When one of these fields gains focus, we highlight them with a light grey, transparent, background. Note that it's important to add the outline property, in order to remove the default focus highlight added by some browsers:

/* TODO: Test :checked pseudo class */
input[type="checkbox"]:checked + label,
input[type="radio"]:checked + label {
  color: #218c74;
}

input[type="checkbox"],
input[type="radio"] {
  margin-right: .8em;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="tel"]:focus,
input[type="url"]:focus,
select:focus,
textarea:focus,
button:focus {
  outline      : none;
  /* border-radius: 5px; */
  /* background   : rgba(0,0,0,.1); */
  background: #fff;
  transition: .5s ease-in-out;
}

input:focus,
select:focus,
textarea:focus {
  /* TODO: Change the color keyword to hex value, plx */
  border-color: #2e86de;
  /* border-top-color: darkblue;
  border-right-color: darkblue;
  border-bottom-color: darkblue; */
  -webkit-transition: 10s;
  transition: 10s;
  border-left-width: 5px;
}

/* input:required:invalid, */
input:focus:invalid {
  background-color: #E3E1E5;
  border-left-width: 5px;
  border-left-color: #b33939;
}

input:required:valid,
input:focus:valid ,
input:optional:valid {
  border-left-color: #218c74;
  border-left-width: 5px;
}

input:optional:invalid {
  background:hsl(300, 50%, 90%);
  border-color: hsl(180, 50%, 90%);
  border-color: #0894BD;
  background-color: #F9F7FB;
}

/* TODO: Remove before submit */
  /* border-color:hsl(0, 20%, 50%); */
  /* background:hsl(0, 50%, 90%); */


input::-webkit-input-placeholder {
  color: var(--placeholder-grey);
  text-align: right;
  font-weight: 400;
  font-style: italic;
  /* placeholder pseudo element is a child of input,
  so we need to set the font size relative to its parent */
  font-size: .9em;
}

input:invalid::-webkit-input-placeholder {
  color: red;
}

input::-ms-input-placeholder {
  color: var(--placeholder-grey);
  text-align: right;
  font-weight: 400;
  font-style: italic;
  /* placeholder pseudo element is a child of input,
  so we need to set the font size relative to its parent */
  font-size: .9em;
}

input::placeholder {
  color: var(--placeholder-grey);
  text-align: right;
  font-weight: 400;
  font-style: italic;
  /* placeholder pseudo element is a child of input,
  so we need to set the font size relative to its parent */
  font-size: .9em;
}

input:hover,
textarea:hover {
  background: #f0eceb;
  -webkit-transition: .5s;
  transition: .5s;
}

/* TODO: FIX BEM */
.form__submit-btn {
  border: none;
  display: block;
  cursor: pointer;
  padding: .8em 0;
  width: 100%;
  border-radius: .2em;
  background-color: #2e86de;
  color: var(--primary--white);
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 700;
  font-size: 1.8em; /* 150% / 24px; */
  transition: opacity ease-in-out .5s;
}

.form__submit-btn:hover {
  opacity: .75;
}

.form__submit-btn:active {
  background-color: darkred;
}





































/* Styles for orientation landscape, tested for iPhone 5, 6, 6plus, X etc. Left out tablet landscape, because splitting up the form into two columns just to fill up screen width is, imo a bad thing */
@media (max-height: 415px) and (orientation: landscape) {

  html {
    font-size: .8em;
  }

  body {
    /* TODO: Remove before submit */
    background: lightskyblue;
  }

  .header__divider {
    border-top-width: 2px;
    border-bottom-width: .5px;
  }

  input[type="text"],
  input[type="email"],
  input[type="tel"],
  input[type="url"],
  select,
  textarea {
    font-size: 1.2em;
  }

  .form__input {
    font-size: 1.2em;
  }

  input[name="user_zip"] {
  width: 25%;
  }
}

@media (min-height: 416px) and (min-width: 760px) {

  html {
    font-size: 1.1em;
  }

  .header__intro {
    padding-bottom: 1.3em;
  }

  .form__field {
    flex-direction: row;
    align-items: center;
  }

  .form__label {
    font-size: 1.2em;
    flex: 1 1 25%;
  }

  input[type="text"],
  input[type="tel"],
  input[type="email"],
  input[type="url"],
  select,
  textarea {
    flex: 1 1 75%;
  }

  label[for="zip"] {
    flex: 0 0 25%;
  }

  input[name="user_zip"] {
    flex: 0 0 25%;
  }
}

@media (min-width: 1024px) {

  html {
    font-size: 1.3em;
  }

  .container,
  .header__signup {
    max-width: 900px;
  }

  input[type="text"],
  input[type="tel"],
  input[type="email"],
  input[type="url"]
  select,
  textarea {
    font-size: 1.3em;
  }

  .form__label {
    flex-basis: 15%;
  }

  label[for="zip"] {
    flex-basis: 20%;
  }
}